#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è DucksNet –±–æ—Ç–∞.
"""
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
DEFAULT_DATA_DIR = project_root / "app" / "data"
DEFAULT_MAIN_MENU_IMAGE_NAME = "DuckNetMainMenu.png"

def test_image_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π DucksNet...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
        print("ÔøΩ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        images_dir = DEFAULT_DATA_DIR / "images"
        print(f"ÔøΩÔ∏è  –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {images_dir}")
        
        if images_dir.exists():
            print("‚úÖ –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞–π–¥–µ–Ω–∞!")
            print("üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏:")
            for file in images_dir.iterdir():
                size_kb = file.stat().st_size / 1024 if file.is_file() else 0
                print(f"   - {file.name} ({size_kb:.1f} KB)")
        else:
            print("‚ùå –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_path = images_dir / DEFAULT_MAIN_MENU_IMAGE_NAME
        print(f"\nÔøΩÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {DEFAULT_MAIN_MENU_IMAGE_NAME}")
        
        if image_path.exists():
            print("‚úÖ –§–∞–π–ª –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω!")
            size_kb = image_path.stat().st_size / 1024
            print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_kb:.1f} KB")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if size_kb > 10240:  # 10 MB
                print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ñ–∞–π–ª –±–æ–ª—å—à–µ 10 –ú–ë")
            elif size_kb < 50:  # 50 KB
                print("‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ñ–∞–π–ª –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π")
            else:
                print("‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π!")
                
        else:
            print("‚ùå –§–∞–π–ª –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ù–ï –Ω–∞–π–¥–µ–Ω!")
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Ç–∏–ª–∏—Ç—ã
        print("\nÔøΩÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —É—Ç–∏–ª–∏—Ç...")
        
        utils_path = project_root / "app" / "bot" / "utils" / "messaging.py"
        if utils_path.exists():
            print("‚úÖ –§–∞–π–ª messaging.py –Ω–∞–π–¥–µ–Ω!")
        else:
            print("‚ùå –§–∞–π–ª messaging.py –ù–ï –Ω–∞–π–¥–µ–Ω!")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º middleware
        middleware_path = project_root / "app" / "bot" / "middlewares" / "config.py"
        if middleware_path.exists():
            print("‚úÖ –§–∞–π–ª config.py middleware –Ω–∞–π–¥–µ–Ω!")
        else:
            print("‚ùå –§–∞–π–ª config.py middleware –ù–ï –Ω–∞–π–¥–µ–Ω!")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ—É—Ç–µ—Ä—ã
        print("\nÔøΩ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—É—Ç–µ—Ä–æ–≤...")
        routers_to_check = [
            "main_menu/handler.py",
            "profile/handler.py", 
            "subscription/subscription_handler.py",
            "support/handler.py",
            "download/handler.py",
            "referral/handler.py"
        ]
        
        updated_routers = 0
        for router_path in routers_to_check:
            full_path = project_root / "app" / "bot" / "routers" / router_path
            if full_path.exists():
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–º–ø–æ—Ä—Ç–∞ messaging
                with open(full_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                    if "from app.bot.utils.messaging import" in content:
                        print(f"   ‚úÖ {router_path} - –æ–±–Ω–æ–≤–ª–µ–Ω")
                        updated_routers += 1
                    else:
                        print(f"   ‚ö†Ô∏è  {router_path} - –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω")
            else:
                print(f"   ‚ùå {router_path} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {updated_routers}/{len(routers_to_check)} —Ä–æ—É—Ç–µ—Ä–æ–≤")
        
        # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê:")
        if image_path.exists() and utils_path.exists() and middleware_path.exists():
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞!")
            print("üöÄ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ.")
            print("üìù –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env:")
            print("   SHOP_MAIN_MENU_IMAGE_ENABLED=true")
            print("   SHOP_MAIN_MENU_IMAGE_NAME=DuckNetMainMenu.png")
        else:
            print("‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ù–ï –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            print("ÔøΩ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –≤—ã—à–µ.")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print(f"üìã –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")


if __name__ == "__main__":
    test_image_integration()
